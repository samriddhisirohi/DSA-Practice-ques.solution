# median of sorted merge array

**Platform:** LeetCode  
**Difficulty:** Hard 
**Problem Link:** https://leetcode.com/problems/median-of-two-sorted-arrays/description/?envType=study-plan-v2&envId=top-interview-150

## Problem Statement
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 
### Example
Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

## Approach / Algorithm
1. made a vector temp to push_back all elements of both array.
2. sort the temp to find its median

This gives **O((m + n) log(m + n))** time complexity **instead O(log(m+n))**
and **O(m + n)** space complexity.

## Constraints
- nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 106